
--DROP TABLE if exists EmployeeDemographics
--CREATE TABLE EmployeeDemographics
--(Employee_id int,
--First_name varchar(50),
--Last_name varchar (50),
--Age int,
--Gender varchar(50)
--)

--CREATE TABLE EmployeeSalary
--(Employee_id int,
--Job_title varchar(50),
--Salary int
--)

--INSERT INTO EmployeeDemographics VALUES
--(1001, 'Jim', 'Halpert', 25, 'Male'),
--(1002, 'Pam', 'Beasley', 30, 'Female'),
--(1003, 'Dwight', 'Schrute', 29, 'Male'),
--(1004, 'Angela', 'Martin', 31, 'Female'),
--(1005, 'Toby', 'Flenderson', 32, 'Male'),
--(1006, 'Michael', 'Scott', 35, 'Male'),
--(1007, 'Meredith', 'Palmer', 32, 'Female'),
--(1008, 'Stanley', 'Hudson', 38, 'Male'),
--(1009, 'Kevin', 'Malone', 31, 'Male')

--INSERT INTO EmployeeSalary VALUES
--(1001, 'Salesman', 45000),
--(1002, 'Receptionist', 36000),
--(1003, 'Salesman', 63000),
--(1004, 'Accountant', 47000),
--(1005, 'HR', 50000),
--(1006, 'Regional Manager', 65000),
--(1007, 'Supplier Relations', 41000),
--(1008, 'Salesman', 48000),
--(1009, 'Accountant', 42000)

--DISTINCT uses that we want to get the unique values in a specific column.
SELECT DISTINCT (Gender)
FROM EmployeeDemographics

--COUNT feature uses to show us all the non null values.
SELECT COUNT(Last_name) AS Last_name_count
FROM EmployeeDemographics

SELECT MAX(Salary)
FROM EmployeeSalary

SELECT AVG(Salary)
FROM SQL Tutorial.dbo.EmployeeSalary

--<> means not equal.
SELECT *
FROM EmployeeDemographics
WHERE First_name <> 'Jim'

SELECT *
FROM EmployeeDemographics
WHERE Age >= 30 AND Gender = 'Male'

SELECT *
FROM EmployeeDemographics
WHERE Age = 30 OR Gender = 'Male'

--S% calls a wildcard shows from the last part of S, %S% means anywhere in between,
SELECT *
FROM EmployeeDemographics
WHERE Last_name LIKE 'S%'

SELECT *
FROM EmployeeDemographics
WHERE Last_name LIKE 'S%o%'

SELECT *
FROM EmployeeDemographics
WHERE Last_name LIKE '%S%'

SELECT *
FROM EmployeeDemographics
WHERE Last_name IN ('Scott', 'Halpert')

--GROUP BY rolls up inot one column and ORDER statement.
SELECT *
FROM EmployeeDemographics
ORDER BY Age DESC, Gender DESC

SELECT *
FROM EmployeeDemographics
ORDER BY 4 DESC, 5 DESC

SELECT Gender, COUNT (Gender) AS Gender_count
FROM EmployeeDemographics
GROUP BY Gender

SELECT Gender, COUNT (Gender) AS Gender_count
FROM EmployeeDemographics
WHERE Age > 31
GROUP BY Gender
ORDER BY Gender_count DESC
